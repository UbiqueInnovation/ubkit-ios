{"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/documentation","title":"UBFoundation","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubautorefreshcachelogic\/cachedresponsenextrefreshdate(_:metrics:)","title":"func cachedResponseNextRefreshDate([AnyHashable : Any], metrics: URLSessionTaskMetrics?) -> Date?","type":"method"},{"path":"\/documentation\/ubfoundation\/ubautorefreshcachelogic\/hasmissedcache(datatask:)","title":"func hasMissedCache(dataTask: UBURLDataTask)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubautorefreshcachelogic\/hasproposedcachedresponse(cachedurlresponse:response:session:request:ubdatatask:metrics:)","title":"func hasProposedCachedResponse(cachedURLResponse: CachedURLResponse?, response: HTTPURLResponse, session: URLSession, request: URLRequest, ubDataTask: UBURLDataTask, metrics: URLSessionTaskMetrics?)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubautorefreshcachelogic\/hasused(response:metrics:request:datatask:)","title":"func hasUsed(response: HTTPURLResponse, metrics: URLSessionTaskMetrics?, request: URLRequest, dataTask: UBURLDataTask)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubautorefreshcachelogic\/proposecachedresponse(for:datatask:ubdatatask:request:response:data:metrics:error:)","title":"func proposeCachedResponse(for: URLSession, dataTask: URLSessionDataTask, ubDataTask: UBURLDataTask, request: URLRequest, response: HTTPURLResponse, data: Data?, metrics: URLSessionTaskMetrics?, error: Error?) -> CachedURLResponse?","type":"method"}],"path":"\/documentation\/ubfoundation\/ubautorefreshcachelogic","title":"UBAutoRefreshCacheLogic","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/init(storagepolicy:qos:)","title":"init(storagePolicy: URLCache.StoragePolicy, qos: DispatchQoS)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/acceptedlanguageheaderfieldname","title":"var acceptedLanguageHeaderFieldName: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/ageheaderfieldname","title":"var ageHeaderFieldName: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/backoffintervalheaderfieldname","title":"var backoffIntervalHeaderFieldName: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/cachecontrolheaderfieldname","title":"var cacheControlHeaderFieldName: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/contentlanguageheaderfieldname","title":"var contentLanguageHeaderFieldName: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/dateformatter","title":"var dateFormatter: DateFormatter","type":"property"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/dateheaderfieldname","title":"var dateHeaderFieldName: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/etagheaderfieldname","title":"var eTagHeaderFieldName: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/expiresheaderfieldname","title":"var expiresHeaderFieldName: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/ifmodifiedsinceheaderfieldname","title":"var ifModifiedSinceHeaderFieldName: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/ifnonematchheaderfieldname","title":"var ifNoneMatchHeaderFieldName: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/lastmodifiedheaderfieldname","title":"var lastModifiedHeaderFieldName: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/nextrefreshheaderfieldname","title":"var nextRefreshHeaderFieldName: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/qos","title":"let qos: DispatchQoS","type":"property"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/storagepolicy","title":"let storagePolicy: URLCache.StoragePolicy","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/cachedresponse(_:request:datatask:)","title":"func cachedResponse(URLSession, request: URLRequest, dataTask: UBURLDataTask) -> UBCacheResult","type":"method"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/getcachedresponsefromsession(_:for:)","title":"func getCachedResponseFromSession(URLSession, for: URLRequest) -> CachedURLResponse?","type":"method"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/hasmissedcache(datatask:)","title":"func hasMissedCache(dataTask: UBURLDataTask)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/hasproposedcachedresponse(cachedurlresponse:response:session:request:ubdatatask:metrics:)","title":"func hasProposedCachedResponse(cachedURLResponse: CachedURLResponse?, response: HTTPURLResponse, session: URLSession, request: URLRequest, ubDataTask: UBURLDataTask, metrics: URLSessionTaskMetrics?)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/hasused(response:metrics:request:datatask:)","title":"func hasUsed(response: HTTPURLResponse, metrics: URLSessionTaskMetrics?, request: URLRequest, dataTask: UBURLDataTask)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/modifycacheresult(proposed:possible:reason:)","title":"func modifyCacheResult(proposed: UBCacheResult, possible: UBCacheResult, reason: CacheDecisionReason) -> UBCacheResult","type":"method"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/proposecachedresponse(for:datatask:ubdatatask:request:response:data:metrics:error:)","title":"func proposeCachedResponse(for: URLSession, dataTask: URLSessionDataTask, ubDataTask: UBURLDataTask, request: URLRequest, response: HTTPURLResponse, data: Data?, metrics: URLSessionTaskMetrics?, error: Error?) -> CachedURLResponse?","type":"method"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/proposeupdatedcachedresponse(_:newresponse:)","title":"func proposeUpdatedCachedResponse(CachedURLResponse, newResponse: HTTPURLResponse) -> CachedURLResponse?","type":"method"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/proposedcacheresponsewhensuccessfull(for:datatask:ubdatatask:request:response:data:metrics:)","title":"func proposedCacheResponseWhenSuccessfull(for: URLSession, dataTask: URLSessionDataTask, ubDataTask: UBURLDataTask, request: URLRequest, response: HTTPURLResponse, data: Data?, metrics: URLSessionTaskMetrics?) -> (response: HTTPURLResponse, data: Data, userInfo: [AnyHashable : Any])?","type":"method"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/shouldwritetocache(allowed:data:response:)","title":"func shouldWriteToCache(allowed: Bool, data: Data, response: HTTPURLResponse) -> Bool","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/cachedecisionreason\/cacheageoldermax(cacheage:maxage:)","title":"case cacheAgeOlderMax(cacheAge: Int, maxAge: Int)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/cachedecisionreason\/cacheageyoungermax(cacheage:maxage:)","title":"case cacheAgeYoungerMax(cacheAge: Int, maxAge: Int)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/cachedecisionreason\/cachingnotallowed","title":"case cachingNotAllowed","type":"case"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/cachedecisionreason\/contentlanguagenotaccepted(_:)","title":"case contentLanguageNotAccepted(String)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/cachedecisionreason\/expiredinpast(expiresdate:)","title":"case expiredInPast(expiresDate: Date)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/cachedecisionreason\/expiresinfuture(expiresdate:)","title":"case expiresInFuture(expiresDate: Date)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/cachedecisionreason\/negativecacheage(cacheage:)","title":"case negativeCacheAge(cacheAge: Int)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/cachedecisionreason\/nocacheheaders","title":"case noCacheHeaders","type":"case"}],"path":"\/documentation\/ubfoundation\/ubbasecachinglogic\/cachedecisionreason","title":"UBBaseCachingLogic.CacheDecisionReason","type":"enum"}],"path":"\/documentation\/ubfoundation\/ubbasecachinglogic","title":"UBBaseCachingLogic","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/init(fireafter:repeat:qos:executionblock:)","title":"init(fireAfter: TimeInterval, repeat: Bool, qos: DispatchQoS, executionBlock: ExecutionBlock)","type":"init"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/init(fireat:qos:executionblock:)","title":"init(fireAt: Date, qos: DispatchQoS, executionBlock: ExecutionBlock)","type":"init"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/init(qos:executionblock:)","title":"init(qos: DispatchQoS, executionBlock: ExecutionBlock)","type":"init"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/init(rule:qos:executionblock:)","title":"init(rule: UBCronRule, qos: DispatchQoS, executionBlock: ExecutionBlock)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/callbackqueue","title":"var callbackQueue: OperationQueue?","type":"property"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/executionblock-swift.property","title":"var executionBlock: ExecutionBlock","type":"property"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/state-swift.property","title":"var state: State","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/pause()","title":"func pause()","type":"method"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/resume()","title":"func resume()","type":"method"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/setfireafter(_:repeat:)","title":"func setFireAfter(TimeInterval, repeat: Bool)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/setfireat(_:)","title":"func setFireAt(Date)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/setrule(_:)","title":"func setRule(UBCronRule)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/executionblock-swift.typealias","title":"UBCronJob.ExecutionBlock","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/state-swift.enum\/finished","title":"case finished","type":"case"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/state-swift.enum\/initial","title":"case initial","type":"case"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/state-swift.enum\/paused","title":"case paused","type":"case"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/state-swift.enum\/resumed","title":"case resumed","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/state-swift.enum\/debugdescription","title":"var debugDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/state-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubcronjob\/state-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubcronjob\/state-swift.enum","title":"UBCronJob.State","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/ubfoundation\/ubcronjob\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/==(_:_:)","title":"static func == (UBCronJob, UBCronJob) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubcronjob\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcronjob\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/ubfoundation\/ubcronjob\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubcronjob","title":"UBCronJob","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubdefaulttrustevaluator\/init(validatehost:)","title":"init(validateHost: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubdefaulttrustevaluator\/evaluate(_:forhost:)","title":"func evaluate(SecTrust, forHost: String) throws","type":"method"}],"path":"\/documentation\/ubfoundation\/ubdefaulttrustevaluator","title":"UBDefaultTrustEvaluator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubdisabledevaluator\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubdisabledevaluator\/evaluate(_:forhost:)","title":"func evaluate(SecTrust, forHost: String) throws","type":"method"}],"path":"\/documentation\/ubfoundation\/ubdisabledevaluator","title":"UBDisabledEvaluator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpjsondecoder\/init(datedecodingstrategy:datadecodingstrategy:)","title":"init(dateDecodingStrategy: JSONDecoder.DateDecodingStrategy, dataDecodingStrategy: JSONDecoder.DataDecodingStrategy)","type":"init"},{"path":"\/documentation\/ubfoundation\/ubhttpjsondecoder\/init(decoder:)","title":"init(decoder: JSONDecoder)","type":"init"}],"path":"\/documentation\/ubfoundation\/ubhttpjsondecoder","title":"UBHTTPJSONDecoder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpstringdecoder\/init(encoding:)","title":"init(encoding: String.Encoding)","type":"init"}],"path":"\/documentation\/ubfoundation\/ubhttpstringdecoder","title":"UBHTTPStringDecoder","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubjsondecoder\/decode(_:from:)","title":"func decode<T>(T.Type, from: Data) throws -> T","type":"method"}],"path":"\/documentation\/ubfoundation\/ubjsondecoder","title":"UBJSONDecoder","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubjsonencoder\/encode(_:)","title":"func encode<T>(T) throws -> Data","type":"method"}],"path":"\/documentation\/ubfoundation\/ubjsonencoder","title":"UBJSONEncoder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubkeychain\/init(accessgroup:encoder:decoder:)","title":"init(accessGroup: String?, encoder: JSONEncoder, decoder: JSONDecoder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubkeychain\/identifier","title":"var identifier: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubkeychain\/delete(for:)","title":"func delete<T>(for: UBKeychainKey<T>) -> Result<Void, UBKeychainError>","type":"method"},{"path":"\/documentation\/ubfoundation\/ubkeychain\/deleteallitems()","title":"func deleteAllItems() -> Result<Void, UBKeychainError>","type":"method"},{"path":"\/documentation\/ubfoundation\/ubkeychain\/get(for:)","title":"func get<T>(for: UBKeychainKey<T>) -> Result<T, UBKeychainError>","type":"method"},{"path":"\/documentation\/ubfoundation\/ubkeychain\/getdata(_:)","title":"func getData(String) -> Result<Data, UBKeychainError>","type":"method"},{"path":"\/documentation\/ubfoundation\/ubkeychain\/set(_:for:accessibility:)","title":"func set<T>(T, for: UBKeychainKey<T>, accessibility: UBKeychainAccessibility) -> Result<Void, UBKeychainError>","type":"method"}],"path":"\/documentation\/ubfoundation\/ubkeychain","title":"UBKeychain","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublocalization\/language\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/ubfoundation\/ublocalization\/language\/init(identifier:)","title":"init(identifier: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublocalization\/language\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ublocalization\/language\/displaynameinnativelanguage","title":"var displayNameInNativeLanguage: String?","type":"property"},{"path":"\/documentation\/ubfoundation\/ublocalization\/language\/identifier","title":"let identifier: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublocalization\/language\/displayname(_:)","title":"func displayName(UBLocalization) -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublocalization\/language\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ublocalization\/language\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ublocalization\/language","title":"UBLocalization.Language","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublocalization\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/ubfoundation\/ublocalization\/init(locale:basebundle:notificationcenter:)","title":"init(locale: Locale, baseBundle: Bundle, notificationCenter: NotificationCenter)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublocalization\/basebundle","title":"var baseBundle: Bundle?","type":"property"},{"path":"\/documentation\/ubfoundation\/ublocalization\/locale","title":"var locale: Locale","type":"property"},{"path":"\/documentation\/ubfoundation\/ublocalization\/localizedbundle","title":"var localizedBundle: Bundle?","type":"property"},{"path":"\/documentation\/ubfoundation\/ublocalization\/notificationcenter","title":"var notificationCenter: NotificationCenter","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublocalization\/preferredlanguages(stripregioninformation:preferredlanguages:)","title":"func preferredLanguages(stripRegionInformation: Bool, preferredLanguages: [String]?) -> [Language]","type":"method"},{"path":"\/documentation\/ubfoundation\/ublocalization\/resetlocaletocurrent(basebundle:)","title":"func resetLocaleToCurrent(baseBundle: Bundle)","type":"method"},{"path":"\/documentation\/ubfoundation\/ublocalization\/setlanguage(languagecode:regioncode:baselocale:basebundle:)","title":"func setLanguage(languageCode: String, regionCode: String?, baseLocale: Locale, baseBundle: Bundle) throws","type":"method"},{"path":"\/documentation\/ubfoundation\/ublocalization\/setlocale(_:basebundle:)","title":"func setLocale(Locale, baseBundle: Bundle)","type":"method"},{"path":"\/documentation\/ubfoundation\/ublocalization\/setlocale(identifier:basebundle:)","title":"func setLocale(identifier: String, baseBundle: Bundle) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublocalization\/availablelanguages(stripregioninformation:bundle:)","title":"static func availableLanguages(stripRegionInformation: Bool, bundle: Bundle) -> Set<Language>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublocalization\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/ubfoundation\/ublocalization\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublocalization\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/ubfoundation\/ublocalization\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ublocalization","title":"UBLocalization","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublogger\/init(_:)","title":"init(OSLog)","type":"init"},{"path":"\/documentation\/ubfoundation\/ublogger\/init(category:bundle:)","title":"init(category: String, bundle: Bundle) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublogger\/loglevel-swift.property","title":"var logLevel: LogLevel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublogger\/debug(_:accesslevel:filename:functionname:linenumber:)","title":"func debug<Subject>(Subject, accessLevel: AccessLevel, fileName: String, functionName: String, lineNumber: Int)","type":"method"},{"path":"\/documentation\/ubfoundation\/ublogger\/error(_:accesslevel:filename:functionname:linenumber:)","title":"func error<Subject>(Subject, accessLevel: AccessLevel, fileName: String, functionName: String, lineNumber: Int)","type":"method"},{"path":"\/documentation\/ubfoundation\/ublogger\/info(_:accesslevel:filename:functionname:linenumber:)","title":"func info<Subject>(Subject, accessLevel: AccessLevel, fileName: String, functionName: String, lineNumber: Int)","type":"method"},{"path":"\/documentation\/ubfoundation\/ublogger\/setloglevel(_:)","title":"func setLogLevel(LogLevel)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublogger\/listener","title":"static var listener: UBLoggerListener?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublogger\/accesslevel\/private","title":"case `private`","type":"case"},{"path":"\/documentation\/ubfoundation\/ublogger\/accesslevel\/public","title":"case `public`","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublogger\/accesslevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ublogger\/accesslevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ublogger\/accesslevel","title":"UBLogger.AccessLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublogger\/loglevel-swift.enum\/default","title":"case `default`","type":"case"},{"path":"\/documentation\/ubfoundation\/ublogger\/loglevel-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/ubfoundation\/ublogger\/loglevel-swift.enum\/verbose","title":"case verbose","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublogger\/loglevel-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ublogger\/loglevel-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ublogger\/loglevel-swift.enum","title":"UBLogger.LogLevel","type":"enum"}],"path":"\/documentation\/ubfoundation\/ublogger","title":"UBLogger","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubloggergroup\/init(loggers:)","title":"init(loggers: [UBLogger])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubloggergroup\/loggers","title":"var loggers: [UBLogger]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubloggergroup\/add(logger:)","title":"func add(logger: UBLogger)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubloggergroup\/remove(logger:)","title":"func remove(logger: UBLogger)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubloggergroup\/set(grouploglevel:)","title":"func set(groupLogLevel: UBLogger.LogLevel)","type":"method"}],"path":"\/documentation\/ubfoundation\/ubloggergroup","title":"UBLoggerGroup","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworkactivitytracker\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworkactivitytracker\/callbackqueue","title":"var callbackQueue: OperationQueue?","type":"property"},{"path":"\/documentation\/ubfoundation\/ubnetworkactivitytracker\/networkactivitystate-swift.property","title":"var networkActivityState: NetworkActivityState","type":"property"},{"path":"\/documentation\/ubfoundation\/ubnetworkactivitytracker\/numberoftrackedtasks","title":"var numberOfTrackedTasks: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworkactivitytracker\/add(_:)","title":"func add(UBURLDataTask)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubnetworkactivitytracker\/addstateobserver(_:)","title":"func addStateObserver(UBNetworkActivityTracker.StateObservationBlock)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubnetworkactivitytracker\/remove(_:)","title":"func remove(UBURLDataTask)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworkactivitytracker\/stateobservationblock","title":"UBNetworkActivityTracker.StateObservationBlock","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworkactivitytracker\/networkactivitystate-swift.enum\/fetching","title":"case fetching","type":"case"},{"path":"\/documentation\/ubfoundation\/ubnetworkactivitytracker\/networkactivitystate-swift.enum\/idle","title":"case idle","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworkactivitytracker\/networkactivitystate-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubnetworkactivitytracker\/networkactivitystate-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubnetworkactivitytracker\/networkactivitystate-swift.enum","title":"UBNetworkActivityTracker.NetworkActivityState","type":"enum"}],"path":"\/documentation\/ubfoundation\/ubnetworkactivitytracker","title":"UBNetworkActivityTracker","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoverygroup\/init(strategies:)","title":"init(strategies: [UBNetworkingTaskRecoveryStrategy])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoverygroup\/strategies","title":"var strategies: [UBNetworkingTaskRecoveryStrategy]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoverygroup\/append(_:)","title":"func append(UBNetworkingTaskRecoveryStrategy)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoverygroup\/cancelcurrentrecovery()","title":"func cancelCurrentRecovery()","type":"method"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoverygroup\/recovertask(_:data:response:error:completion:)","title":"func recoverTask(UBURLDataTask, data: Data?, response: URLResponse?, error: Error, completion: (UBNetworkingTaskRecoveryResult) -> Void)","type":"method"}],"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoverygroup","title":"UBNetworkTaskRecoveryGroup","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubpinnedcertificatestrustevaluator\/init(certificates:acceptselfsignedcertificates:performdefaultvalidation:validatehost:)","title":"init(certificates: [SecCertificate], acceptSelfSignedCertificates: Bool, performDefaultValidation: Bool, validateHost: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubpinnedcertificatestrustevaluator\/evaluate(_:forhost:)","title":"func evaluate(SecTrust, forHost: String) throws","type":"method"}],"path":"\/documentation\/ubfoundation\/ubpinnedcertificatestrustevaluator","title":"UBPinnedCertificatesTrustEvaluator","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/ignorecache","title":"static let ignoreCache: UBURLDataTask.Flags","type":"property"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/synchronous","title":"static let synchronous: UBURLDataTask.Flags","type":"property"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/systemtriggered","title":"static let systemTriggered: UBURLDataTask.Flags","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.struct","title":"UBURLDataTask.Flags","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/init(request:taskdescription:priority:session:callbackqueue:)","title":"init(request: UBURLRequest, taskDescription: String?, priority: Float, session: UBDataTaskURLSession, callbackQueue: OperationQueue)","type":"init"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/init(url:taskdescription:priority:session:callbackqueue:)","title":"init(url: URL, taskDescription: String?, priority: Float, session: UBDataTaskURLSession, callbackQueue: OperationQueue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/countofbytesreceived","title":"var countOfBytesReceived: Int64","type":"property"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/flags-swift.property","title":"var flags: Flags","type":"property"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/priority","title":"let priority: Float","type":"property"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/progress","title":"var progress: Progress","type":"property"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/request","title":"let request: UBURLRequest","type":"property"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/requestinterceptor","title":"var requestInterceptor: UBURLRequestInterceptor?","type":"property"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/session","title":"let session: UBDataTaskURLSession","type":"property"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/state-swift.property","title":"var state: State","type":"property"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/taskdescription","title":"let taskDescription: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/addcompletionhandler(_:)","title":"func addCompletionHandler(CompletionHandlingNullableDataBlock) -> UUID","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/addcompletionhandler(decoder:completionhandler:)","title":"func addCompletionHandler<T>(decoder: UBURLDataTaskDecoder<T>, completionHandler: CompletionHandlingBlock<T>) -> UUID","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/addcompletionhandler(decoder:errordecoder:completionhandler:)","title":"func addCompletionHandler<T, E>(decoder: UBURLDataTaskDecoder<T>, errorDecoder: UBURLDataTaskDecoder<E>, completionHandler: CompletionHandlingBlock<T>) -> UUID","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/addfailurerecoverystrategy(_:)","title":"func addFailureRecoveryStrategy(UBNetworkingTaskRecoveryStrategy)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/addprogressobserver(_:)","title":"func addProgressObserver(ProgressObservationBlock)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/addrequestmodifier(_:)","title":"func addRequestModifier(UBURLRequestModifier)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/addresponsevalidator(_:)-3fvzx","title":"func addResponseValidator(UBHTTPURLResponseValidator)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/addresponsevalidator(_:)-52vt8","title":"func addResponseValidator(UBHTTPResponseValidatorBlock.ValidationBlock)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/addresponsevalidator(_:)-822ih","title":"func addResponseValidator([UBHTTPURLResponseValidator])","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/addstatetransitionobserver(_:)","title":"func addStateTransitionObserver(StateTransitionObservationBlock)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/cancel(notifycompletion:)","title":"func cancel(notifyCompletion: Bool)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/removecompletionhandler(identifier:)","title":"func removeCompletionHandler(identifier: CompletionHandlerIdentifier)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/start(ignorecache:)","title":"func start(ignoreCache: Bool)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/startsynchronous()","title":"func startSynchronous() -> (result: Result<Data?, UBNetworkingError>, response: HTTPURLResponse?, info: UBNetworkingTaskInfo?, dataTask: UBURLDataTask)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/startsynchronous(decoder:)","title":"func startSynchronous<T>(decoder: UBURLDataTaskDecoder<T>) -> (result: Result<T, UBNetworkingError>, response: HTTPURLResponse?, info: UBNetworkingTaskInfo?, dataTask: UBURLDataTask)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/completionhandleridentifier","title":"UBURLDataTask.CompletionHandlerIdentifier","type":"typealias"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/completionhandlingblock","title":"UBURLDataTask.CompletionHandlingBlock","type":"typealias"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/completionhandlingnullabledatablock","title":"UBURLDataTask.CompletionHandlingNullableDataBlock","type":"typealias"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/progressobservationblock","title":"UBURLDataTask.ProgressObservationBlock","type":"typealias"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/statetransitionobservationblock","title":"UBURLDataTask.StateTransitionObservationBlock","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/state-swift.enum\/cancelled","title":"case cancelled","type":"case"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/state-swift.enum\/fetching","title":"case fetching","type":"case"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/state-swift.enum\/finished","title":"case finished","type":"case"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/state-swift.enum\/initial","title":"case initial","type":"case"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/state-swift.enum\/parsing","title":"case parsing","type":"case"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/state-swift.enum\/waitingexecution","title":"case waitingExecution","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/state-swift.enum\/debugdescription","title":"var debugDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatatask\/state-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/uburldatatask\/state-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/uburldatatask\/state-swift.enum","title":"UBURLDataTask.State","type":"enum"}],"path":"\/documentation\/ubfoundation\/uburldatatask","title":"UBURLDataTask","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatataskdecoder\/init(withlogic:)","title":"init(withLogic: LogicBlock)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatataskdecoder\/decode(data:response:)","title":"func decode(data: Data, response: HTTPURLResponse) throws -> T","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatataskdecoder\/logicblock","title":"UBURLDataTaskDecoder.LogicBlock","type":"typealias"}],"path":"\/documentation\/ubfoundation\/uburldatataskdecoder","title":"UBURLDataTaskDecoder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestacceptedlanguagemodifier\/init(includeregion:localization:)","title":"init(includeRegion: Bool, localization: UBLocalization)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestacceptedlanguagemodifier\/includeregion","title":"var includeRegion: Bool","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlrequestacceptedlanguagemodifier\/localization","title":"var localization: UBLocalization","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestacceptedlanguagemodifier\/modifyrequest(_:completion:)","title":"func modifyRequest(UBURLRequest, completion: (Result<UBURLRequest, Error>) -> Void)","type":"method"}],"path":"\/documentation\/ubfoundation\/uburlrequestacceptedlanguagemodifier","title":"UBURLRequestAcceptedLanguageModifier","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestbasicauthorization\/init(login:password:)","title":"init(login: String, password: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestbasicauthorization\/login","title":"var login: String","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlrequestbasicauthorization\/password","title":"var password: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestbasicauthorization\/modifyrequest(_:completion:)","title":"func modifyRequest(UBURLRequest, completion: (Result<UBURLRequest, Error>) -> Void)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequestbasicauthorization\/set(login:password:)","title":"func set(login: String, password: String)","type":"method"}],"path":"\/documentation\/ubfoundation\/uburlrequestbasicauthorization","title":"UBURLRequestBasicAuthorization","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestmodifiergroup\/init(modifiers:)","title":"init(modifiers: [UBURLRequestModifier])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestmodifiergroup\/modifiers","title":"var modifiers: [UBURLRequestModifier]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestmodifiergroup\/append(_:)","title":"func append(UBURLRequestModifier)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequestmodifiergroup\/cancelcurrentmodification()","title":"func cancelCurrentModification()","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequestmodifiergroup\/modifyrequest(_:completion:)","title":"func modifyRequest(UBURLRequest, completion: (Result<UBURLRequest, Error>) -> Void)","type":"method"}],"path":"\/documentation\/ubfoundation\/uburlrequestmodifiergroup","title":"UBURLRequestModifierGroup","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlsession\/init(configuration:delegatequeue:)","title":"init(configuration: UBURLSessionConfiguration, delegateQueue: OperationQueue?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlsession\/datatask(with:owner:)","title":"func dataTask(with: UBURLRequest, owner: UBURLDataTask) -> URLSessionDataTask?","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlsession\/finishtasksandinvalidate()","title":"func finishTasksAndInvalidate()","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlsession\/invalidateandcancel()","title":"func invalidateAndCancel()","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlsession\/reset(completionhandler:)","title":"func reset(completionHandler: () -> Void)","type":"method"}],"path":"\/documentation\/ubfoundation\/uburlsession","title":"UBURLSession","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlsessionconfiguration\/init(sessionconfiguration:hostsservertrusts:defaultservertrust:allowredirections:cachinglogic:)","title":"init(sessionConfiguration: URLSessionConfiguration, hostsServerTrusts: [String : UBServerTrustEvaluator], defaultServerTrust: UBServerTrustEvaluator?, allowRedirections: Bool, cachingLogic: UBCachingLogic?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlsessionconfiguration\/allowredirections","title":"let allowRedirections: Bool","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlsessionconfiguration\/cachinglogic","title":"let cachingLogic: UBCachingLogic?","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlsessionconfiguration\/defaultservertrust","title":"let defaultServerTrust: UBServerTrustEvaluator?","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlsessionconfiguration\/hostsservertrusts","title":"let hostsServerTrusts: [String : UBServerTrustEvaluator]","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlsessionconfiguration\/sessionconfiguration","title":"let sessionConfiguration: URLSessionConfiguration","type":"property"}],"path":"\/documentation\/ubfoundation\/uburlsessionconfiguration","title":"UBURLSessionConfiguration","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcachinglogic\/cachedresponse(_:request:datatask:)","title":"func cachedResponse(URLSession, request: URLRequest, dataTask: UBURLDataTask) -> UBCacheResult","type":"method"},{"path":"\/documentation\/ubfoundation\/ubcachinglogic\/hasmissedcache(datatask:)","title":"func hasMissedCache(dataTask: UBURLDataTask)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubcachinglogic\/hasproposedcachedresponse(cachedurlresponse:response:session:request:ubdatatask:metrics:)","title":"func hasProposedCachedResponse(cachedURLResponse: CachedURLResponse?, response: HTTPURLResponse, session: URLSession, request: URLRequest, ubDataTask: UBURLDataTask, metrics: URLSessionTaskMetrics?)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubcachinglogic\/hasused(response:metrics:request:datatask:)","title":"func hasUsed(response: HTTPURLResponse, metrics: URLSessionTaskMetrics?, request: URLRequest, dataTask: UBURLDataTask)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubcachinglogic\/proposecachedresponse(for:datatask:ubdatatask:request:response:data:metrics:error:)","title":"func proposeCachedResponse(for: URLSession, dataTask: URLSessionDataTask, ubDataTask: UBURLDataTask, request: URLRequest, response: HTTPURLResponse, data: Data?, metrics: URLSessionTaskMetrics?, error: Error?) -> CachedURLResponse?","type":"method"},{"path":"\/documentation\/ubfoundation\/ubcachinglogic\/proposeupdatedcachedresponse(_:newresponse:)","title":"func proposeUpdatedCachedResponse(CachedURLResponse, newResponse: HTTPURLResponse) -> CachedURLResponse?","type":"method"}],"path":"\/documentation\/ubfoundation\/ubcachinglogic","title":"UBCachingLogic","type":"protocol"},{"path":"\/documentation\/ubfoundation\/ubcodable","title":"UBCodable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcodederror\/errorcode","title":"var errorCode: String","type":"property"}],"path":"\/documentation\/ubfoundation\/ubcodederror","title":"UBCodedError","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcronrule\/deadlinefromnow","title":"var deadlineFromNow: DispatchTimeInterval","type":"property"},{"path":"\/documentation\/ubfoundation\/ubcronrule\/repeatrule","title":"var repeatRule: UBCronRepeatRule","type":"property"},{"path":"\/documentation\/ubfoundation\/ubcronrule\/tolerence","title":"var tolerence: DispatchTimeInterval?","type":"property"}],"path":"\/documentation\/ubfoundation\/ubcronrule","title":"UBCronRule","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubdatataskurlsession\/datatask(with:owner:)","title":"func dataTask(with: UBURLRequest, owner: UBURLDataTask) -> URLSessionDataTask?","type":"method"}],"path":"\/documentation\/ubfoundation\/ubdatataskurlsession","title":"UBDataTaskURLSession","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpurlresponsevalidator\/validatehttpresponse(_:)","title":"func validateHTTPResponse(HTTPURLResponse) throws","type":"method"}],"path":"\/documentation\/ubfoundation\/ubhttpurlresponsevalidator","title":"UBHTTPURLResponseValidator","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubkeychainprotocol\/identifier","title":"var identifier: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubkeychainprotocol\/delete(for:)","title":"func delete<T>(for: UBKeychainKey<T>) -> Result<Void, UBKeychainError>","type":"method"},{"path":"\/documentation\/ubfoundation\/ubkeychainprotocol\/deleteallitems()","title":"func deleteAllItems() -> Result<Void, UBKeychainError>","type":"method"},{"path":"\/documentation\/ubfoundation\/ubkeychainprotocol\/get(for:)","title":"func get<T>(for: UBKeychainKey<T>) -> Result<T, UBKeychainError>","type":"method"},{"path":"\/documentation\/ubfoundation\/ubkeychainprotocol\/getdata(_:)","title":"func getData(String) -> Result<Data, UBKeychainError>","type":"method"},{"path":"\/documentation\/ubfoundation\/ubkeychainprotocol\/set(_:for:accessibility:)","title":"func set<T>(T, for: UBKeychainKey<T>, accessibility: UBKeychainAccessibility) -> Result<Void, UBKeychainError>","type":"method"}],"path":"\/documentation\/ubfoundation\/ubkeychainprotocol","title":"UBKeychainProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubloggerlistener\/log(message:)","title":"func log(message: String)","type":"method"}],"path":"\/documentation\/ubfoundation\/ubloggerlistener","title":"UBLoggerListener","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoveryoption\/localizeddisplayname","title":"var localizedDisplayName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoveryoption\/attemptrecovery(resulthandler:)","title":"func attemptRecovery(resultHandler: (Bool) -> Void)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoveryoption\/cancelongoingrecovery()","title":"func cancelOngoingRecovery()","type":"method"}],"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoveryoption","title":"UBNetworkTaskRecoveryOption","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworkingtaskrecoverystrategy\/recovertask(_:data:response:error:completion:)","title":"func recoverTask(UBURLDataTask, data: Data?, response: URLResponse?, error: Error, completion: (UBNetworkingTaskRecoveryResult) -> Void)","type":"method"}],"path":"\/documentation\/ubfoundation\/ubnetworkingtaskrecoverystrategy","title":"UBNetworkingTaskRecoveryStrategy","type":"protocol"},{"path":"\/documentation\/ubfoundation\/ubrawrepresentable","title":"UBRawRepresentable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubservertrustevaluator\/evaluate(_:forhost:)","title":"func evaluate(SecTrust, forHost: String) throws","type":"method"}],"path":"\/documentation\/ubfoundation\/ubservertrustevaluator","title":"UBServerTrustEvaluator","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburldatataskerrorbody\/baseerror","title":"var baseError: Error?","type":"property"}],"path":"\/documentation\/ubfoundation\/uburldatataskerrorbody","title":"UBURLDataTaskErrorBody","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestinterceptor\/interceptrequest(_:completion:)","title":"func interceptRequest(UBURLRequest, completion: (UBURLInterceptorResult?) -> Void)","type":"method"}],"path":"\/documentation\/ubfoundation\/uburlrequestinterceptor","title":"UBURLRequestInterceptor","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/ubfoundation\/uburlrequesttokenauthorization\/modifyrequest(_:completion:)","title":"func modifyRequest(UBURLRequest, completion: (Result<UBURLRequest, Error>) -> Void)","type":"method"}],"title":"UBURLRequestTokenAuthorization Implementations","type":"groupMarker"}],"path":"\/documentation\/ubfoundation\/uburlrequestmodifier\/modifyrequest(_:completion:)","title":"func modifyRequest(UBURLRequest, completion: (Result<UBURLRequest, Error>) -> Void)","type":"method"}],"path":"\/documentation\/ubfoundation\/uburlrequestmodifier","title":"UBURLRequestModifier","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequesttokenauthorization\/gettoken(completion:)","title":"func getToken(completion: (Result<String, Error>) -> Void)","type":"method"}],"path":"\/documentation\/ubfoundation\/uburlrequesttokenauthorization","title":"UBURLRequestTokenAuthorization","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlsessionprotocol\/finishtasksandinvalidate()","title":"func finishTasksAndInvalidate()","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlsessionprotocol\/invalidateandcancel()","title":"func invalidateAndCancel()","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlsessionprotocol\/reset(completionhandler:)","title":"func reset(completionHandler: () -> Void)","type":"method"}],"path":"\/documentation\/ubfoundation\/uburlsessionprotocol","title":"UBURLSessionProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlsessiontask\/progress","title":"var progress: Progress","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlsessiontask\/request","title":"var request: UBURLRequest","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlsessiontask\/taskdescription","title":"var taskDescription: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlsessiontask\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlsessiontask\/start()","title":"func start()","type":"method"}],"path":"\/documentation\/ubfoundation\/uburlsessiontask","title":"UBURLSessionTask","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/ubfoundation\/ubuserdefaultvalue\/init(with:)-a6q3","title":"init?(with: Any)","type":"init"},{"path":"\/documentation\/ubfoundation\/ubuserdefaultvalue\/init(with:)-9ku8g","title":"init?(with: Any)","type":"init"},{"path":"\/documentation\/ubfoundation\/ubuserdefaultvalue\/init(with:)-2nd9r","title":"init?(with: Any)","type":"init"}],"title":"UBUserDefaultValue Implementations","type":"groupMarker"}],"path":"\/documentation\/ubfoundation\/ubuserdefaultvalue\/init(with:)-5w5yl","title":"init?(with: Any)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/ubfoundation\/ubuserdefaultvalue\/object()-2hzai","title":"func object() -> Any?","type":"method"},{"path":"\/documentation\/ubfoundation\/ubuserdefaultvalue\/object()-yeze","title":"func object() -> Any?","type":"method"},{"path":"\/documentation\/ubfoundation\/ubuserdefaultvalue\/object()-3egr7","title":"func object() -> Any?","type":"method"}],"title":"UBUserDefaultValue Implementations","type":"groupMarker"}],"path":"\/documentation\/ubfoundation\/ubuserdefaultvalue\/object()-3w8cc","title":"func object() -> Any?","type":"method"}],"path":"\/documentation\/ubfoundation\/ubuserdefaultvalue","title":"UBUserDefaultValue","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/urlrequestbodyconvertible\/httprequestbody()","title":"func httpRequestBody() throws -> UBURLRequestBody","type":"method"}],"path":"\/documentation\/ubfoundation\/urlrequestbodyconvertible","title":"URLRequestBodyConvertible","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/==(_:_:)-1eou9","title":"static func == (UBCacheResponseDirective, Command) -> Bool","type":"op"},{"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/==(_:_:)-7dlno","title":"static func == (Command, UBCacheResponseDirective) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/init(command:value:)","title":"init(command: Command, value: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/command-swift.property","title":"let command: Command","type":"property"},{"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/value","title":"let value: Int?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/command-swift.enum\/maxage","title":"case maxAge","type":"case"},{"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/command-swift.enum\/nocache","title":"case noCache","type":"case"},{"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/command-swift.enum\/nostore","title":"case noStore","type":"case"},{"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/command-swift.enum\/smaxage","title":"case sMaxAge","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/command-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/command-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/command-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/command-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/command-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/command-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/command-swift.enum","title":"UBCacheResponseDirective.Command","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubcacheresponsedirective","title":"UBCacheResponseDirective","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubfireatdaterule\/init(_:tolerence:)-3qyqw","title":"init(Date, tolerence: TimeInterval)","type":"init"},{"path":"\/documentation\/ubfoundation\/ubfireatdaterule\/init(_:tolerence:)-6yqad","title":"init(Date, tolerence: DispatchTimeInterval?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubfireatdaterule\/deadlinefromnow","title":"var deadlineFromNow: DispatchTimeInterval","type":"property"},{"path":"\/documentation\/ubfoundation\/ubfireatdaterule\/repeatrule","title":"var repeatRule: UBCronRepeatRule","type":"property"},{"path":"\/documentation\/ubfoundation\/ubfireatdaterule\/tolerence","title":"var tolerence: DispatchTimeInterval?","type":"property"}],"path":"\/documentation\/ubfoundation\/ubfireatdaterule","title":"UBFireAtDateRule","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubfireatintervalrule\/init(_:repeat:tolerence:)-4dnel","title":"init(TimeInterval, repeat: Bool, tolerence: DispatchTimeInterval?)","type":"init"},{"path":"\/documentation\/ubfoundation\/ubfireatintervalrule\/init(_:repeat:tolerence:)-4lr10","title":"init(TimeInterval, repeat: Bool, tolerence: TimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubfireatintervalrule\/deadlinefromnow","title":"var deadlineFromNow: DispatchTimeInterval","type":"property"},{"path":"\/documentation\/ubfoundation\/ubfireatintervalrule\/repeatrule","title":"var repeatRule: UBCronRepeatRule","type":"property"},{"path":"\/documentation\/ubfoundation\/ubfireatintervalrule\/tolerence","title":"var tolerence: DispatchTimeInterval?","type":"property"}],"path":"\/documentation\/ubfoundation\/ubfireatintervalrule","title":"UBFireAtIntervalRule","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/init(key:value:)-4j9jo","title":"init(key: StandardKeys, value: String?)","type":"init"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/init(key:value:)-5he6h","title":"init(key: StandardKeys, value: UBMIMEType)","type":"init"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/init(key:value:)-9vzn2","title":"init(key: String, value: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/key","title":"let key: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/value","title":"let value: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/accept","title":"case accept","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/acceptencoding","title":"case acceptEncoding","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/acceptlanguage","title":"case acceptLanguage","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/age","title":"case age","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/authorization","title":"case authorization","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/cachecontrol","title":"case cacheControl","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/contentdisposition","title":"case contentDisposition","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/contentencoding","title":"case contentEncoding","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/contentlanguage","title":"case contentLanguage","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/contentlength","title":"case contentLength","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/contentmd5","title":"case contentMD5","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/contenttype","title":"case contentType","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/date","title":"case date","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/etag","title":"case etag","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/expires","title":"case expires","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/ifmodifiedsince","title":"case ifModifiedSince","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/ifnonematch","title":"case ifNoneMatch","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/lastmodified","title":"case lastModified","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/useragent","title":"case userAgent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubhttpheaderfield\/standardkeys","title":"UBHTTPHeaderField.StandardKeys","type":"enum"}],"path":"\/documentation\/ubfoundation\/ubhttpheaderfield","title":"UBHTTPHeaderField","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttprequestbodyurlencoder\/init(payload:encoding:sendencoding:)","title":"init(payload: [String : String?], encoding: String.Encoding, sendEncoding: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttprequestbodyurlencoder\/encoding","title":"var encoding: String.Encoding","type":"property"},{"path":"\/documentation\/ubfoundation\/ubhttprequestbodyurlencoder\/payload","title":"var payload: [String : String?]","type":"property"},{"path":"\/documentation\/ubfoundation\/ubhttprequestbodyurlencoder\/sendencoding","title":"var sendEncoding: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttprequestbodyurlencoder\/httprequestbody()","title":"func httpRequestBody() throws -> UBURLRequestBody","type":"method"}],"path":"\/documentation\/ubfoundation\/ubhttprequestbodyurlencoder","title":"UBHTTPRequestBodyURLEncoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpresponsecontenttypevalidator\/init(expectedmimetype:)","title":"init(expectedMIMEType: UBMIMEType)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpresponsecontenttypevalidator\/validatehttpresponse(_:)","title":"func validateHTTPResponse(HTTPURLResponse) throws","type":"method"}],"path":"\/documentation\/ubfoundation\/ubhttpresponsecontenttypevalidator","title":"UBHTTPResponseContentTypeValidator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpresponsestatusvalidator\/init(_:)-33o4p","title":"init([Int])","type":"init"},{"path":"\/documentation\/ubfoundation\/ubhttpresponsestatusvalidator\/init(_:)-3k3y6","title":"init(UBHTTPCodeCategory)","type":"init"},{"path":"\/documentation\/ubfoundation\/ubhttpresponsestatusvalidator\/init(_:)-3sr5f","title":"init(UBStandardHTTPCode)","type":"init"},{"path":"\/documentation\/ubfoundation\/ubhttpresponsestatusvalidator\/init(_:)-5cacx","title":"init([UBStandardHTTPCode])","type":"init"},{"path":"\/documentation\/ubfoundation\/ubhttpresponsestatusvalidator\/init(_:)-7cpal","title":"init(Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpresponsestatusvalidator\/validatehttpresponse(_:)","title":"func validateHTTPResponse(HTTPURLResponse) throws","type":"method"}],"path":"\/documentation\/ubfoundation\/ubhttpresponsestatusvalidator","title":"UBHTTPResponseStatusValidator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpresponsevalidatorblock\/init(_:)","title":"init(ValidationBlock)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpresponsevalidatorblock\/validatehttpresponse(_:)","title":"func validateHTTPResponse(HTTPURLResponse) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpresponsevalidatorblock\/validationblock","title":"UBHTTPResponseValidatorBlock.ValidationBlock","type":"typealias"}],"path":"\/documentation\/ubfoundation\/ubhttpresponsevalidatorblock","title":"UBHTTPResponseValidatorBlock","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubkeychainkey\/init(_:)","title":"init(String)","type":"init"}],"path":"\/documentation\/ubfoundation\/ubkeychainkey","title":"UBKeychainKey","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubkeychainstored\/init(key:defaultvalue:accessibility:keychain:)","title":"init(key: String, defaultValue: Value, accessibility: UBKeychainAccessibility, keychain: UBKeychainProtocol)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubkeychainstored\/accessibility","title":"let accessibility: UBKeychainAccessibility","type":"property"},{"path":"\/documentation\/ubfoundation\/ubkeychainstored\/defaultvalue","title":"let defaultValue: Value","type":"property"},{"path":"\/documentation\/ubfoundation\/ubkeychainstored\/key","title":"let key: UBKeychainKey<Value>","type":"property"},{"path":"\/documentation\/ubfoundation\/ubkeychainstored\/keychain","title":"let keychain: UBKeychainProtocol","type":"property"},{"path":"\/documentation\/ubfoundation\/ubkeychainstored\/wrappedvalue","title":"var wrappedValue: Value","type":"property"}],"path":"\/documentation\/ubfoundation\/ubkeychainstored","title":"UBKeychainStored","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/parameter-swift.struct\/init(charsetforencoding:)","title":"init?(charsetForEncoding: String.Encoding)","type":"init"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/parameter-swift.struct\/init(key:value:)","title":"init(key: String, value: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/parameter-swift.struct\/key","title":"let key: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/parameter-swift.struct\/value","title":"let value: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/parameter-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubmimetype\/parameter-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubmimetype\/parameter-swift.struct","title":"UBMIMEType.Parameter","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/init(string:)","title":"init?(string: String)","type":"init"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/init(type:subtype:parameter:)","title":"init(type: StandardType, subtype: String, parameter: Parameter?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/parameter-swift.property","title":"var parameter: Parameter?","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/stringvalue","title":"var stringValue: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/subtype","title":"var subtype: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/type","title":"var type: StandardType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/isequal(_:ignoreparameter:)","title":"func isEqual(UBMIMEType, ignoreParameter: Bool) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/aac","title":"static var aac: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/binary","title":"static var binary: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/bitmap","title":"static var bitmap: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/css","title":"static var css: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/csv","title":"static var csv: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/formurlencoded","title":"static var formUrlencoded: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/gif","title":"static var gif: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/html","title":"static var html: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/javascript","title":"static var javascript: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/jpeg","title":"static var jpeg: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/midi","title":"static var midi: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/mp3","title":"static var mp3: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/mpeg","title":"static var mpeg: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/pdf","title":"static var pdf: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/png","title":"static var png: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/rtf","title":"static var rtf: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/svg","title":"static var svg: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/ttf","title":"static var ttf: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/wav","title":"static var wav: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/woff","title":"static var woff: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/woff2","title":"static var woff2: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/xmlapplication","title":"static var xmlApplication: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/xmltext","title":"static var xmlText: UBMIMEType","type":"property"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/zip","title":"static var zip: UBMIMEType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/json(encoding:)","title":"static func json(encoding: String.Encoding) -> UBMIMEType","type":"method"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/multipartformdata(boundary:)","title":"static func multipartFormData(boundary: String) -> UBMIMEType","type":"method"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/text(encoding:)","title":"static func text(encoding: String.Encoding?) -> UBMIMEType","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/standardtype\/application","title":"case application","type":"case"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/standardtype\/audio","title":"case audio","type":"case"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/standardtype\/font","title":"case font","type":"case"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/standardtype\/image","title":"case image","type":"case"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/standardtype\/message","title":"case message","type":"case"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/standardtype\/multipart","title":"case multipart","type":"case"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/standardtype\/text","title":"case text","type":"case"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/standardtype\/video","title":"case video","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/standardtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/standardtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubmimetype\/standardtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/standardtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubmimetype\/standardtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/ubfoundation\/ubmimetype\/standardtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubmimetype\/standardtype","title":"UBMIMEType.StandardType","type":"enum"}],"path":"\/documentation\/ubfoundation\/ubmimetype","title":"UBMIMEType","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoveryoptions\/==(_:_:)","title":"static func == (UBNetworkTaskRecoveryOptions, UBNetworkTaskRecoveryOptions) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoveryoptions\/init(recoveringfrom:recoveryoptions:)","title":"init(recoveringFrom: Error, recoveryOptions: [UBNetworkTaskRecoveryOption])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoveryoptions\/originalerror","title":"let originalError: Error","type":"property"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoveryoptions\/recoveryoptions","title":"var recoveryOptions: [String]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoveryoptions\/attemptrecovery(optionindex:)","title":"func attemptRecovery(optionIndex: Int) -> Bool","type":"method"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoveryoptions\/attemptrecovery(optionindex:resulthandler:)","title":"func attemptRecovery(optionIndex: Int, resultHandler: (Bool) -> Void)","type":"method"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoveryoptions\/cancelongoingrecovery()","title":"func cancelOngoingRecovery()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoveryoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoveryoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoveryoptions\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoveryoptions\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubnetworktaskrecoveryoptions","title":"UBNetworkTaskRecoveryOptions","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworkingtaskinfo\/cachehit","title":"let cacheHit: Bool","type":"property"},{"path":"\/documentation\/ubfoundation\/ubnetworkingtaskinfo\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ubnetworkingtaskinfo\/refresh","title":"let refresh: Bool","type":"property"}],"path":"\/documentation\/ubfoundation\/ubnetworkingtaskinfo","title":"UBNetworkingTaskInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlinterceptorresult\/init(data:response:error:info:)","title":"init(data: Data?, response: HTTPURLResponse?, error: Error?, info: UBNetworkingTaskInfo?)","type":"init"},{"path":"\/documentation\/ubfoundation\/uburlinterceptorresult\/init(data:url:)","title":"init(data: Data?, url: URL)","type":"init"}],"path":"\/documentation\/ubfoundation\/uburlinterceptorresult","title":"UBURLInterceptorResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/init(request:)","title":"init(request: URLRequest)","type":"init"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/init(url:method:timeoutinterval:)","title":"init(url: URL, method: UBHTTPMethod, timeoutInterval: TimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/allhttpheaderfields","title":"var allHTTPHeaderFields: [String : String]?","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/allowscellularaccess","title":"var allowsCellularAccess: Bool","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/custommirror","title":"var customMirror: Mirror","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/httpbody","title":"var httpBody: Data?","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/httpmethod","title":"var httpMethod: UBHTTPMethod?","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/maindocumenturl","title":"var mainDocumentURL: URL?","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/networkservicetype","title":"var networkServiceType: URLRequest.NetworkServiceType","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/timeoutinterval","title":"var timeoutInterval: TimeInterval","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/url","title":"var url: URL?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/addtohttpheaderfield(_:)","title":"func addToHTTPHeaderField(UBHTTPHeaderField)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/allqueryparameters()","title":"func allQueryParameters() throws -> [URLQueryItem]","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/clearhttpbody()","title":"func clearHTTPBody()","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/getrequest()","title":"func getRequest() -> URLRequest","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/setdefaultuseragent()","title":"func setDefaultUserAgent()","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/sethttpbody(_:)-7fe3p","title":"func setHTTPBody(URLRequestBodyConvertible) throws","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/sethttpbody(_:)-dt6l","title":"func setHTTPBody(UBURLRequestBody)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/sethttpheaderfield(_:)","title":"func setHTTPHeaderField(UBHTTPHeaderField)","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/sethttpjsonbody(_:encoder:)","title":"func setHTTPJSONBody<T>(T, encoder: JSONEncoder) throws","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/setpercentencodedqueryparameter(_:)","title":"func setPercentEncodedQueryParameter(URLQueryItem) throws","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/setpercentencodedqueryparameters(_:)-2xfiz","title":"func setPercentEncodedQueryParameters([String : String?]) throws","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/setpercentencodedqueryparameters(_:)-4tu7y","title":"func setPercentEncodedQueryParameters([URLQueryItem]) throws","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/setqueryparameter(_:)","title":"func setQueryParameter(URLQueryItem) throws","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/setqueryparameters(_:)-4xek6","title":"func setQueryParameters(URLQueryItem) throws","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/setqueryparameters(_:)-55t8p","title":"func setQueryParameters([String : String?]) throws","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/setqueryparameters(_:)-6jp2","title":"func setQueryParameters([URLQueryItem]) throws","type":"method"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/value(forhttpheaderfield:)","title":"func value(forHTTPHeaderField: String) -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/uburlrequest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/uburlrequest","title":"UBURLRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestbody\/init(data:mimetype:)","title":"init(data: Data, mimeType: UBMIMEType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestbody\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlrequestbody\/mimetype","title":"let mimeType: UBMIMEType","type":"property"}],"path":"\/documentation\/ubfoundation\/uburlrequestbody","title":"UBURLRequestBody","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestbodymultipart\/parameter\/init(name:value:)","title":"init(name: String, value: String)","type":"init"}],"path":"\/documentation\/ubfoundation\/uburlrequestbodymultipart\/parameter","title":"UBURLRequestBodyMultipart.Parameter","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestbodymultipart\/payload\/init(name:filename:body:)","title":"init(name: String, fileName: String, body: URLRequestBodyConvertible) throws","type":"init"},{"path":"\/documentation\/ubfoundation\/uburlrequestbodymultipart\/payload\/init(name:filename:data:mimetype:)","title":"init(name: String, fileName: String, data: Data, mimeType: UBMIMEType)","type":"init"}],"path":"\/documentation\/ubfoundation\/uburlrequestbodymultipart\/payload","title":"UBURLRequestBodyMultipart.Payload","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestbodymultipart\/init(parameters:payloads:encoding:)","title":"init(parameters: [Parameter], payloads: [Payload], encoding: String.Encoding)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestbodymultipart\/boundary","title":"let boundary: String","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlrequestbodymultipart\/encoding","title":"var encoding: String.Encoding","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlrequestbodymultipart\/parameters","title":"var parameters: [Parameter]","type":"property"},{"path":"\/documentation\/ubfoundation\/uburlrequestbodymultipart\/payloads","title":"var payloads: [Payload]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/uburlrequestbodymultipart\/httprequestbody()","title":"func httpRequestBody() throws -> UBURLRequestBody","type":"method"}],"path":"\/documentation\/ubfoundation\/uburlrequestbodymultipart","title":"UBURLRequestBodyMultipart","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubuserdefault\/init(key:defaultvalue:userdefaults:)","title":"init(key: String, defaultValue: Value, userDefaults: UserDefaults)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubuserdefault\/wrappedvalue","title":"var wrappedValue: Value","type":"property"}],"path":"\/documentation\/ubfoundation\/ubuserdefault","title":"UBUserDefault","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubapplocalization","title":"var UBAppLocalization: UBLocalization","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/setlanguage(languagecode:regioncode:)","title":"func setLanguage(languageCode: String, regionCode: String?) throws","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcacheresponsedirectives","title":"UBCacheResponseDirectives","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/networking\/globalnetworkactivitystate","title":"static var globalNetworkActivityState: UBNetworkActivityTracker.NetworkActivityState","type":"property"},{"path":"\/documentation\/ubfoundation\/networking\/numberofdatatasks","title":"static var numberOfDataTasks: Int","type":"property"},{"path":"\/documentation\/ubfoundation\/networking\/sharedlowprioritysession","title":"static let sharedLowPrioritySession: UBURLSession","type":"property"},{"path":"\/documentation\/ubfoundation\/networking\/sharedsession","title":"static let sharedSession: UBURLSession","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/networking\/addglobalnetworkactivitystateobserver(_:)","title":"static func addGlobalNetworkActivityStateObserver(UBNetworkActivityTracker.StateObservationBlock)","type":"method"},{"path":"\/documentation\/ubfoundation\/networking\/addtoglobalnetworkactivity(_:)","title":"static func addToGlobalNetworkActivity(UBURLDataTask)","type":"method"},{"path":"\/documentation\/ubfoundation\/networking\/removefromglobalnetworkactivity(_:)","title":"static func removeFromGlobalNetworkActivity(UBURLDataTask)","type":"method"}],"path":"\/documentation\/ubfoundation\/networking","title":"Networking","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcacheresult\/expired(cachedresponse:reloadheaders:metrics:)","title":"case expired(cachedResponse: CachedURLResponse, reloadHeaders: [String : String], metrics: URLSessionTaskMetrics?)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubcacheresult\/hit(cachedresponse:reloadheaders:metrics:)","title":"case hit(cachedResponse: CachedURLResponse, reloadHeaders: [String : String], metrics: URLSessionTaskMetrics?)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubcacheresult\/miss","title":"case miss","type":"case"}],"path":"\/documentation\/ubfoundation\/ubcacheresult","title":"UBCacheResult","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcronrepeatrule\/after(_:)","title":"case after(DispatchTimeInterval)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubcronrepeatrule\/never","title":"case never","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubcronrepeatrule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubcronrepeatrule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubcronrepeatrule","title":"UBCronRepeatRule","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubdeviceuuid\/getuuid()","title":"static func getUUID() -> String","type":"method"}],"path":"\/documentation\/ubfoundation\/ubdeviceuuid","title":"UBDeviceUUID","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/!=(_:_:)-3yqq3","title":"static func != (UBHTTPCodeCategory, Int) -> Bool","type":"op"},{"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/!=(_:_:)-6li6j","title":"static func != (UBHTTPCodeCategory, HTTPURLResponse) -> Bool","type":"op"},{"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/!=(_:_:)-6tk15","title":"static func != (Int, UBHTTPCodeCategory) -> Bool","type":"op"},{"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/!=(_:_:)-7paao","title":"static func != (HTTPURLResponse, UBHTTPCodeCategory) -> Bool","type":"op"},{"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/==(_:_:)-3vs4g","title":"static func == (HTTPURLResponse, UBHTTPCodeCategory) -> Bool","type":"op"},{"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/==(_:_:)-433ei","title":"static func == (Int, UBHTTPCodeCategory) -> Bool","type":"op"},{"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/==(_:_:)-8ig41","title":"static func == (UBHTTPCodeCategory, HTTPURLResponse) -> Bool","type":"op"},{"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/==(_:_:)-9lykn","title":"static func == (UBHTTPCodeCategory, Int) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/clienterror","title":"case clientError","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/informational","title":"case informational","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/redirection","title":"case redirection","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/servererror","title":"case serverError","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/success","title":"case success","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/uncategorized","title":"case uncategorized","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/init(code:)","title":"init(code: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/!=(_:_:)-4v8g6","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubhttpcodecategory\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubhttpcodecategory","title":"UBHTTPCodeCategory","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpmethod\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpmethod\/get","title":"case get","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpmethod\/head","title":"case head","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpmethod\/patch","title":"case patch","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpmethod\/post","title":"case post","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpmethod\/put","title":"case put","type":"case"},{"path":"\/documentation\/ubfoundation\/ubhttpmethod\/trace","title":"case trace","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpmethod\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubhttpmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubhttpmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/ubfoundation\/ubhttpmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubhttpmethod","title":"UBHTTPMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/canceled","title":"case canceled","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/couldnotcreateurl","title":"case couldNotCreateURL","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/couldnotdecodebody","title":"case couldNotDecodeBody","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/couldnotencodebody","title":"case couldNotEncodeBody","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/malformedurl(url:)","title":"case malformedURL(url: URL)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/missingurl","title":"case missingURL","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/nocacheddata","title":"case noCachedData","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/nothttpresponse","title":"case notHTTPResponse","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/othererror(_:)","title":"case otherError(NSError)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/recoverableerror(_:)","title":"case recoverableError(UBNetworkTaskRecoveryOptions)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/requestfailed(httpstatuscode:)","title":"case requestFailed(httpStatusCode: Int)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/requestredirected","title":"case requestRedirected","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/responsebodyisempty","title":"case responseBodyIsEmpty","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/responsebodyisnotempty","title":"case responseBodyIsNotEmpty","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/responsemimetypevalidationfailed","title":"case responseMIMETypeValidationFailed","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/responsestatusvalidationfailed(status:)","title":"case responseStatusValidationFailed(status: Int)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/synchronoustimedout","title":"case synchronousTimedOut","type":"case"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/unwraperror","title":"case unwrapError","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/errorcode","title":"var errorCode: String","type":"property"}],"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror\/ubcodederror-implementations","title":"UBCodedError Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubinternalnetworkingerror","title":"UBInternalNetworkingError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubkeychainaccessibility\/afterfirstunlock","title":"case afterFirstUnlock","type":"case"},{"path":"\/documentation\/ubfoundation\/ubkeychainaccessibility\/afterfirstunlockthisdeviceonly","title":"case afterFirstUnlockThisDeviceOnly","type":"case"},{"path":"\/documentation\/ubfoundation\/ubkeychainaccessibility\/always","title":"case always","type":"case"},{"path":"\/documentation\/ubfoundation\/ubkeychainaccessibility\/alwaysthisdeviceonly","title":"case alwaysThisDeviceOnly","type":"case"},{"path":"\/documentation\/ubfoundation\/ubkeychainaccessibility\/whenpasscodesetthisdeviceonly","title":"case whenPasscodeSetThisDeviceOnly","type":"case"},{"path":"\/documentation\/ubfoundation\/ubkeychainaccessibility\/whenunlocked","title":"case whenUnlocked","type":"case"},{"path":"\/documentation\/ubfoundation\/ubkeychainaccessibility\/whenunlockedthisdeviceonly","title":"case whenUnlockedThisDeviceOnly","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubkeychainaccessibility\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubkeychainaccessibility\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubkeychainaccessibility\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubkeychainaccessibility\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/ubfoundation\/ubkeychainaccessibility\/rawvalue","title":"var rawValue: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubkeychainaccessibility\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/ubfoundation\/ubkeychainaccessibility\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubkeychainaccessibility","title":"UBKeychainAccessibility","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubkeychainerror\/cannotaccess(_:)","title":"case cannotAccess(OSStatus)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubkeychainerror\/cannotdelete(_:)","title":"case cannotDelete(OSStatus)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubkeychainerror\/decodingerror(_:)","title":"case decodingError(Error)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubkeychainerror\/encodingerror(_:)","title":"case encodingError(Error)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubkeychainerror\/keychainnotreturningdata","title":"case keychainNotReturningData","type":"case"},{"path":"\/documentation\/ubfoundation\/ubkeychainerror\/notfound","title":"case notFound","type":"case"},{"path":"\/documentation\/ubfoundation\/ubkeychainerror\/storingerror(_:)","title":"case storingError(OSStatus)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubkeychainerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/ubfoundation\/ubkeychainerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubkeychainerror","title":"UBKeychainError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublocalizationerror\/bundelnotfound","title":"case bundelNotFound","type":"case"},{"path":"\/documentation\/ubfoundation\/ublocalizationerror\/invalidlanguagecode","title":"case invalidLanguageCode","type":"case"},{"path":"\/documentation\/ubfoundation\/ublocalizationerror\/invalidregioncode","title":"case invalidRegionCode","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublocalizationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ublocalizationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublocalizationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/ubfoundation\/ublocalizationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ublocalizationerror","title":"UBLocalizationError","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublocalizationnotification\/localedidchange","title":"static var localeDidChange: Notification.Name","type":"property"},{"path":"\/documentation\/ubfoundation\/ublocalizationnotification\/localewillchange","title":"static var localeWillChange: Notification.Name","type":"property"},{"path":"\/documentation\/ubfoundation\/ublocalizationnotification\/newlocalekey","title":"static var newLocaleKey: String","type":"property"},{"path":"\/documentation\/ubfoundation\/ublocalizationnotification\/oldlocalekey","title":"static var oldLocaleKey: String","type":"property"}],"path":"\/documentation\/ubfoundation\/ublocalizationnotification","title":"UBLocalizationNotification","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ublogging\/setgloballoglevel(_:)","title":"static func setGlobalLogLevel(UBLogger.LogLevel)","type":"method"}],"path":"\/documentation\/ubfoundation\/ublogging","title":"UBLogging","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubloggingerror\/bundelidentifiernotfound","title":"case bundelIdentifierNotFound","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubloggingerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubloggingerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubloggingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/ubfoundation\/ubloggingerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubloggingerror","title":"UBLoggingError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworkingerror\/certificatevalidationfailed","title":"case certificateValidationFailed","type":"case"},{"path":"\/documentation\/ubfoundation\/ubnetworkingerror\/internal(_:)","title":"case `internal`(UBInternalNetworkingError)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubnetworkingerror\/notconnected","title":"case notConnected","type":"case"},{"path":"\/documentation\/ubfoundation\/ubnetworkingerror\/timedout","title":"case timedOut","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworkingerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubnetworkingerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworkingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/ubfoundation\/ubnetworkingerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworkingerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/ubfoundation\/ubnetworkingerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/ubfoundation\/ubnetworkingerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/ubfoundation\/ubnetworkingerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/ubfoundation\/ubnetworkingerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworkingerror\/errorcode","title":"var errorCode: String","type":"property"}],"path":"\/documentation\/ubfoundation\/ubnetworkingerror\/ubcodederror-implementations","title":"UBCodedError Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubnetworkingerror","title":"UBNetworkingError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubnetworkingtaskrecoveryresult\/cannotrecover","title":"case cannotRecover","type":"case"},{"path":"\/documentation\/ubfoundation\/ubnetworkingtaskrecoveryresult\/recovered(data:response:info:)","title":"case recovered(data: Data?, response: HTTPURLResponse, info: UBNetworkingTaskInfo?)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubnetworkingtaskrecoveryresult\/recoveryoptions(options:)","title":"case recoveryOptions(options: UBNetworkTaskRecoveryOptions)","type":"case"},{"path":"\/documentation\/ubfoundation\/ubnetworkingtaskrecoveryresult\/restartdatatask","title":"case restartDataTask","type":"case"}],"path":"\/documentation\/ubfoundation\/ubnetworkingtaskrecoveryresult","title":"UBNetworkingTaskRecoveryResult","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/!=(_:_:)-2okux","title":"static func != (HTTPURLResponse, UBStandardHTTPCode) -> Bool","type":"op"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/!=(_:_:)-4q4lz","title":"static func != (UBStandardHTTPCode, HTTPURLResponse) -> Bool","type":"op"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/!=(_:_:)-5h1y0","title":"static func != (Int, UBStandardHTTPCode) -> Bool","type":"op"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/!=(_:_:)-8rbgy","title":"static func != (UBStandardHTTPCode, Int) -> Bool","type":"op"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/==(_:_:)-3v5kj","title":"static func == (UBStandardHTTPCode, Int) -> Bool","type":"op"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/==(_:_:)-4b4g","title":"static func == (Int, UBStandardHTTPCode) -> Bool","type":"op"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/==(_:_:)-5of4q","title":"static func == (HTTPURLResponse, UBStandardHTTPCode) -> Bool","type":"op"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/==(_:_:)-6nnn6","title":"static func == (UBStandardHTTPCode, HTTPURLResponse) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/accepted","title":"case accepted","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/badgateway","title":"case badGateway","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/badrequest","title":"case badRequest","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/conflict","title":"case conflict","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/continue","title":"case `continue`","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/created","title":"case created","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/forbidden","title":"case forbidden","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/found","title":"case found","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/gatewaytimeout","title":"case gatewayTimeout","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/internalservererror","title":"case internalServerError","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/movedpermanently","title":"case movedPermanently","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/nocontent","title":"case noContent","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/notextended","title":"case notExtended","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/notfound","title":"case notFound","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/notimplemented","title":"case notImplemented","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/notmodified","title":"case notModified","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/ok","title":"case ok","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/servicenotavailable","title":"case serviceNotAvailable","type":"case"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/unauthorized","title":"case unauthorized","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/!=(_:_:)-4ht2t","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/ubfoundation\/ubstandardhttpcode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/ubfoundation\/ubstandardhttpcode","title":"UBStandardHTTPCode","type":"enum"}],"path":"\/documentation\/ubfoundation","title":"UBFoundation","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}