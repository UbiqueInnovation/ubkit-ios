{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"proposeUpdatedCachedResponse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"currentCachedResponse"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CachedURLResponse","preciseIdentifier":"c:objc(cs)NSCachedURLResponse"},{"kind":"text","text":", "},{"kind":"externalParam","text":"newResponse"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPURLResponse","preciseIdentifier":"c:objc(cs)NSHTTPURLResponse"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CachedURLResponse","preciseIdentifier":"c:objc(cs)NSCachedURLResponse"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"currentCachedResponse","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The current cached response"}]}]},{"name":"newResponse","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The updated HTTP response"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Typically this is called when a cache hits and the backend returns a "},{"type":"codeVoice","code":"not-modified"},{"type":"text","text":" response"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/ubfoundation\/ubcachinglogic\/proposeupdatedcachedresponse(_:newresponse:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/UBFoundation\/documentation\/UBFoundation\/UBCachingLogic\/proposeUpdatedCachedResponse(_:newResponse:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Asks the caching logic to provide a cached proposition based on an existing cached response but with updating the relevent fields based on a newer request."}],"kind":"symbol","metadata":{"role":"symbol","title":"proposeUpdatedCachedResponse(_:newResponse:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"proposeUpdatedCachedResponse"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CachedURLResponse","preciseIdentifier":"c:objc(cs)NSCachedURLResponse"},{"kind":"text","text":", "},{"kind":"externalParam","text":"newResponse"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPURLResponse","preciseIdentifier":"c:objc(cs)NSHTTPURLResponse"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CachedURLResponse","preciseIdentifier":"c:objc(cs)NSCachedURLResponse"},{"kind":"text","text":"?"}],"symbolKind":"method","externalID":"s:12UBFoundation14UBCachingLogicP28proposeUpdatedCachedResponse_03newG0So19NSCachedURLResponseCSgAG_So17NSHTTPURLResponseCtF","required":true,"modules":[{"name":"UBFoundation"}]},"hierarchy":{"paths":[["doc:\/\/UBFoundation\/documentation\/UBFoundation","doc:\/\/UBFoundation\/documentation\/UBFoundation\/UBCachingLogic"]]},"references":{"doc://UBFoundation/documentation/UBFoundation":{"role":"collection","title":"UBFoundation","abstract":[],"identifier":"doc:\/\/UBFoundation\/documentation\/UBFoundation","kind":"symbol","type":"topic","url":"\/documentation\/ubfoundation"},"doc://UBFoundation/documentation/UBFoundation/UBCachingLogic/proposeUpdatedCachedResponse(_:newResponse:)":{"role":"symbol","title":"proposeUpdatedCachedResponse(_:newResponse:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"proposeUpdatedCachedResponse"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CachedURLResponse","preciseIdentifier":"c:objc(cs)NSCachedURLResponse"},{"kind":"text","text":", "},{"kind":"externalParam","text":"newResponse"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPURLResponse","preciseIdentifier":"c:objc(cs)NSHTTPURLResponse"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CachedURLResponse","preciseIdentifier":"c:objc(cs)NSCachedURLResponse"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Asks the caching logic to provide a cached proposition based on an existing cached response but with updating the relevent fields based on a newer request."}],"identifier":"doc:\/\/UBFoundation\/documentation\/UBFoundation\/UBCachingLogic\/proposeUpdatedCachedResponse(_:newResponse:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/ubfoundation\/ubcachinglogic\/proposeupdatedcachedresponse(_:newresponse:)"},"doc://UBFoundation/documentation/UBFoundation/UBCachingLogic":{"role":"symbol","title":"UBCachingLogic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"UBCachingLogic"}],"abstract":[{"type":"text","text":"A caching logic object can provide decision when comes to requests and response that needs caching"}],"identifier":"doc:\/\/UBFoundation\/documentation\/UBFoundation\/UBCachingLogic","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UBCachingLogic"}],"url":"\/documentation\/ubfoundation\/ubcachinglogic"}}}